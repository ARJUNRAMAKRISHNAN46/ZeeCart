<%- include('../layout/header.ejs') %>

    <body>
        <span style="font-size:30px;cursor:pointer" class="openNav" onclick="openNav()">&#9776;</span>
        <div id="mySidenav" class="sidenav">
            <div class="d-flex align-items-center justify-content-end"><a href="javascript:void(0)" class="closebtn"
                    onclick="closeNav()"><i class="fa-solid fa-arrow-left"></i></i></a></div>
            <!-- &times; -->
            <div class="zeediv d-flex align-items-center justify-content-center">
                <h3 class="zeecart">Zee<span href="" id="zeecart">C</span>art</h3>
            </div>

            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/dashboard?page=1">Dashboard</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/products?page=1">Products</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/catagory?page=1">Catagory</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/brands?page=1">Brand</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/offers?page=1">Offers</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/admin?page=1">Admins</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/customers?page=1">Customers</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/orders?page=1">Orders</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/coupon?page=1">Coupen</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/banners?page=1">Banner</a></span></div>
            <div class="btnz d-flex align-items-center justify-content-center"><span><a class="a-tag"
                        href="/log-out">log out</a></span></div>


        </div>

        <div class="details">
            <div class="recentOrders">
                <div class="container cardHeader">
                    <h1>Dashboard</h1>
                    <div class="d-flex justify-content-end">
                        <button type="button" id="downloadReportButton" class="btn btn-dark">Download Sales
                            Report</button>
                    </div>
                </div>

                <div class="modal fade" id="salesReportModal" tabindex="-1" aria-labelledby="salesReportModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="salesReportModalLabel">Sales Report</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form action="/downloadSalesReport" method="post">
                                    <span class="alert-danger" id="error"></span>
                                    <div class="mb-3">
                                        <label for="startDate" class="form-label">Start Date:</label>
                                        <input type="date" name="startDate" class="form-control"
                                            onchange="dateValidation()" id="startDate" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="endDate" class="form-label">End Date:</label>
                                        <input type="date" name="endDate" class="form-control" id="endDate"
                                            onchange="dateValidation()" required>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary" onclick="loader()"
                                            id="downBtn">Download Report</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container mt-4">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Sales Analysis</h2>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="dropdown show">
                                            <a class="btn btn-secondary dropdown-toggle" href="#" role="button"
                                                id="timeIntervalDropdown" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                By Day
                                            </a>

                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                                <a class="dropdown-item" id="byDayOption">Day</a>
                                                <a class="dropdown-item" id="byMonthOption">Month</a>
                                                <a class="dropdown-item" id="byYearOption">year</a>
                                            </div>
                                        </div>
                                        <div class="col-lg-12">
                                            <canvas id="salesGraphAmount"></canvas>
                                        </div>
                                        <div class="col-lg-12">
                                            <canvas id="salesGraphCount"></canvas>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Latest Orders</h2>
                                <div class="card-body ">
                                    <div class="table-responsive">
                                        <table class="table table-borderless">
                                            <thead>
                                                <tr>
                                                    <th>Order ID</th>
                                                    <th>Date</th>
                                                    <th>Total</th>
                                                    <th>Payment</th>
                                                    <th>Status</th>
                                                </tr>
                                            </thead>
                                            <tbody id="latestOrdersTable">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="card shadow" style="background-color: #fff;">
                                <h2 class="card-header">Best Sellers</h2>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-borderless">
                                            <thead>
                                                <tr>
                                                    <th>Product Image</th>
                                                    <th>Product</th>
                                                    <th>Product Name</th>
                                                    <th>Price</th>
                                                    <th>Status</th>
                                                    <th>Sold</th>
                                                </tr>
                                            </thead>
                                            <tbody id="bestSellersTable">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>

        <style>
            .header {
                background-color: #000000;
                color: #fff;
                padding: 20px;
                text-align: center;
                min-height: 80px;
            }

            .container {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-between;
                padding: 20px;
            }

            .card {
                background-color: #fff;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
                flex: 1;
            }

            .graph {
                margin-right: 0;
            }

            .table-responsive {
                overflow-x: auto;
            }
        </style>

        </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

        <script>
            function loader() {
                let timerInterval;
                Swal.fire({
                    title: "Auto close toast!",
                    html: "I will close in <b></b> milliseconds.",
                    timer: 2000,
                    timerProgressBar: true,
                    toast: true, // Set to true to display it as a toast
                    position: "top-end", // You can change the position as needed
                    showConfirmButton: false, // Hide the "OK" button
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    /* Read more about handling dismissals below */
                    if (result.dismiss === Swal.DismissReason.timer) {
                        console.log("I was closed by the timer");
                    }
                });

            }

            function dateValidation() {
                var startDate = new Date(document.getElementById('startDate').value);
                var endDate = new Date(document.getElementById('endDate').value);
                const currentDate = new Date();
                var downBtn = document.getElementById('downBtn');
                var error = document.getElementById('error');

                if (startDate > currentDate) {
                    error.innerHTML = 'Invalid date range: Start date cannot be in the future.';
                    downBtn.style.display = 'none'; // or set to 'block' if needed
                } else if (endDate > currentDate) {
                    error.innerHTML = 'Invalid date range: End date cannot be in the future.';
                    downBtn.style.display = 'none'; // or set to 'block' if needed
                } else if (startDate > endDate) {
                    error.innerHTML = 'Invalid date range: Start date cannot be after end date.';
                    downBtn.style.display = 'none'; // or set to 'block' if needed
                } else {
                    error.innerHTML = '';
                    downBtn.style.display = 'block';
                }

            }

            // function validateAndSubmit(event) {
            //     event.preventDefault();

            //     const startDate = new Date(document.getElementById('startDate').value);
            //     const endDate = new Date(document.getElementById('endDate').value);
            //     const currentDate = new Date();
            //     console.log(currentDate, '------------------');
            //     console.log(startDate, '------------------');
            //     console.log(endDate, '------------------');

            //     if (startDate > currentDate) {
            //         document.getElementById('error').textContent = 'Invalid date range1';
            //     } else if (endDate > currentDate) {
            //         document.getElementById('error').textContent = 'Invalid date range2';
            //     } else if (startDate > endDate) {
            //         document.getElementById('error').textContent = 'Invalid date range3';
            //     } else {
            //         document.getElementById('error').textContent = '';
            // document.getElementById('salesReportForm').submit();
            //     }
            // }
        </script>

        <script>

            document.addEventListener('DOMContentLoaded', function () {
                var modalButton = document.querySelector('#downloadReportButton');
                var closebtn = document.querySelector('#closebtn');

                var salesReportModal = new bootstrap.Modal(document.getElementById('salesReportModal'));

                modalButton.addEventListener('click', function () {
                    salesReportModal.show();
                });

                closebtn.addEventListener('click', function () {
                    salesReportModal.hide();
                });

                var salesReportForm = document.getElementById('salesReportForm');

                salesReportForm.addEventListener('submit', function (event) {
                    event.preventDefault();

                    var startDate = document.getElementById('startDate').value;
                    var endDate = document.getElementById('endDate').value;
                    var fileType = document.getElementById('fileType').value;

                    salesReportModal.hide();

                });
            });
        </script>

        <script>

            updateSalesGraph("day");
            document.getElementById("byDayOption").addEventListener("click", function () {
                document.getElementById("timeIntervalDropdown").textContent = "By Day";
                updateSalesGraph("day");
            });


            document.getElementById("byMonthOption").addEventListener("click", function () {
                console.log('herrrrrrrrr');
                document.getElementById("timeIntervalDropdown").textContent = "By Month";
                updateSalesGraph("month");
            });

            document.getElementById("byYearOption").addEventListener("click", function () {
                document.getElementById("timeIntervalDropdown").textContent = "By Year";
                updateSalesGraph("year");
            });


            async function fetchSalesData(timeInterval) {
                try {
                    let response;
                    if (timeInterval === "day") {
                        response = await fetch('/count-orders-by-day');
                    } else if (timeInterval === "month") {
                        console.log("monthsss");
                        response = await fetch(`/count-orders-by-${timeInterval}`);
                    } else if (timeInterval === "year") {
                        console.log("yearssss");
                        response = await fetch(`/count-orders-by-${timeInterval}`);
                    } else {
                        return false;
                    }
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const data = await response.json();


                    return data;
                } catch (error) {
                    console.error("Error fetching data:", error);
                }
            }



            async function fetchOrdersAndSales() {
                try {

                    const response = await fetch("/latestOrders");
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    const data = await response.json();
                    return data;
                } catch (error) {
                    console.log("Error fetching data", error);
                }
            }




            async function updateSalesGraph(timeInterval) {
                const salesData = await fetchSalesData(timeInterval);
                const Amount = document.getElementById("salesGraphAmount").getContext("2d");
                const Count = document.getElementById("salesGraphCount").getContext("2d");

                if (window.myChart1) {
                    window.myChart1.destroy();
                }
                if (window.myChart2) {
                    window.myChart2.destroy();
                }

                window.myChart1 = new Chart(Amount, {
                    type: "line",
                    data: {
                        labels: salesData.labelsByCount,
                        datasets: [{
                            label: "Sales by orders",
                            data: salesData.dataByCount,
                            borderColor: "green",
                            fill: false
                        }]
                    },
                    options: {
                        legend: { display: false },
                    }
                });

                const barColors = ["red", "green", "blue", "orange", "brown"];
                window.myChart2 = new Chart(Count, {
                    type: "bar",
                    data: {
                        labels: salesData.labelsByAmount,
                        datasets: [
                            {
                                label: "Sales by Amount",
                                data: salesData.dataByAmount,
                                backgroundColor: barColors,
                                borderColor: "white",
                                borderWidth: 3,
                            },
                        ],
                    },
                    options: {
                        scales: {
                            x: [{
                                grid: {
                                    display: true
                                }
                            }],
                            y: [{
                                beginAtZero: true,
                                maxTicksLimit: 5
                            }]
                        }
                    },
                });

            }



            async function updateLatestOrdersAndBestSellers() {
                const data = await fetchOrdersAndSales();
                const latestOrdersTable = document.getElementById("latestOrdersTable");
                const bestSellersTable = document.getElementById("bestSellersTable");
                const ordersData = data.latestOrders;
                const bestSellersData = data.bestSeller;

                ordersData.forEach((order) => {
                    const row = latestOrdersTable.insertRow();
                    const orderIdCell = row.insertCell(0);
                    const dateCell = row.insertCell(1);
                    const totalCell = row.insertCell(2);
                    const paymentCell = row.insertCell(3);
                    const statusCell = row.insertCell(4);

                    orderIdCell.textContent = order._id;
                    dateCell.textContent = order.OrderDate;
                    totalCell.textContent = order.totalAmount;
                    paymentCell.textContent = order.paymentMethod;
                    statusCell.textContent = order.PaymentStatus;
                });

                bestSellersData.forEach((seller) => {
                    const row = bestSellersTable.insertRow();
                    const productImageCell = row.insertCell(0);
                    const productCell = row.insertCell(1);
                    const productNameCell = row.insertCell(2);
                    const priceCell = row.insertCell(3);
                    const statusCell = row.insertCell(4);
                    const salesCell = row.insertCell(5);

                    const imgElement = document.createElement("img");
                    const imageUrl = "/product-images/" + seller.productDetails.images[0];
                    imgElement.src = imageUrl;
                    imgElement.style.maxWidth = "50px";
                    productImageCell.appendChild(imgElement);
                    productCell.textContent = seller.productDetails._id;
                    productNameCell.textContent = seller.productDetails.ProductName;
                    priceCell.textContent = seller.productDetails.DiscountAmount;
                    statusCell.textContent = seller.productDetails.AvailableQuantity === 0 ? "Out of Stock" : "In Stock";
                    salesCell.textContent = seller.totalCount;
                });
            }

            updateSalesGraph();
            updateLatestOrdersAndBestSellers();

        </script>

        <script>
            function openNav() {
                document.getElementById("mySidenav").style.width = "200px";
            }

            function closeNav() {
                document.getElementById("mySidenav").style.width = "0";
            }


        </script>

        <%- include('../layout/footer.ejs') %>